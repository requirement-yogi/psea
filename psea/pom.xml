<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <!-- Yes, this project depends on another project
        1. It removes it from open-source, which doesn't matter since no-one is going to fork it,
        2. We don't have to synchronize the version numbers for the moment,
        3. But it makes it much easier to manage the compatibility with Confluence 8.9 and 9.0.
        -->
        <groupId>com.requirementyogi.datacenter</groupId>
        <artifactId>confluence-parent-pom</artifactId>
        <version>3.11.1</version>
        <relativePath/><!-- This tells Maven to go look into the repositories -->
    </parent>

    <!-- I didn't name it 'psea-plugin' because I want the final jar to be named `psea-x.y.z.jar` and not
    fiddle with a ton of configuration just to get that final name -->
    <artifactId>psea</artifactId>
    <version>2.0.5</version>

    <name>PSEA - Export Add-on</name>
    <description>The add-on is a technical library that helps Requirement Yogi export documents to Excel.</description>
    <packaging>atlassian-plugin</packaging>

    <licenses>
        <license>
            <name>Commercial</name>
            <url>https://docs.requirementyogi.com/legal/eula</url>
            <comments>The Requirement Yogi EULA applies to this software - See https://docs.requirementyogi.com/legal/eula</comments>
        </license>
    </licenses>

    <dependencies>
        <!-- ################################ -->
        <!-- ##     General libraries      ## -->
        <!-- ################################ -->
        <dependency>
            <groupId>com.requirementyogi.datacenter</groupId>
            <artifactId>psea-api</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.requirementyogi.datacenter</groupId>
            <artifactId>confluence-utils</artifactId>
            <version>${yogi.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- ################################ -->
        <!-- ##       For Apache POI       ## -->
        <!-- ################################ -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>stax</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--<dependency>
            &lt;!&ndash; This dependency upgrades a vulnerable dep of Apache POI.
                 Please remove it once POI is upgraded to the next version.
            &ndash;&gt;
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.26.1</version>
        </dependency>-->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.16.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.11.0</version>
            <!-- compile -->
            <exclusions>
                <exclusion>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.18.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>amps-maven-plugin</artifactId>
                <version>${atlz.libs.amps.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <!-- Ensure the plugin is Spring-powered -->
                        <Spring-Context>*</Spring-Context>
                        <Atlassian-Plugin-Key>${official.plugin.complete.key}</Atlassian-Plugin-Key>
                        <Atlassian-Scan-Folders>META-INF/plugin-descriptors</Atlassian-Scan-Folders>
                        <Export-Package>
                            com.requirementyogi.datacenter.psea.api,
                            com.requirementyogi.datacenter.psea.api.exceptions
                        </Export-Package>
                        <scannedDependencies>
                            <dependency>
                                <groupId>com.requirementyogi.datacenter</groupId>
                                <artifactId>psea-api</artifactId>
                            </dependency>
                        </scannedDependencies>
                        <Import-Package>
                            <!-- Specific to Apache POI -->
                            org.xml*,
                            org.w3c.dom.*;resolution:=optional;version="0.0.0",
                            !com.github.*,
                            !de.rototor.*,
                            !org.apache.*,
                            !org.bouncycastle.*,
                            !org.brotli.*,
                            !org.openxmlformats.*,
                            !org.tukaani.*,
                            !com.microsoft.*,
                            !com.sun.org.apache.*,
                            !net.sf.saxon.*,
                            !org.objectweb.asm.*,
                            !org.ietf.jgss.*,

                            <!-- To avoid double-importing the DynamicImport-Package -->
                            !com.requirementyogi.datacenter.psea.api;resolution:=optional;version="0.0.0",
                            !com.requirementyogi.datacenter.psea.api.exceptions;resolution:=optional;version="0.0.0",

                            <!-- According to https://confluence.atlassian.com/doc/struts-2-upgrade-1155473773.html -->
                            com.opensymphony.xwork;resolution:=optional,
                            com.opensymphony.webwork;resolution:=optional,
                            com.opensymphony.webwork.interceptor;resolution:=optional,
                            org.apache.struts2;resolution:=optional,
                            org.apache.struts2.dispatcher;resolution:=optional,
                            org.apache.struts2.interceptor.parameter;resolution:=optional,
                            com.opensymphony.xwork2;resolution:=optional,


                            <!-- Shouldn't be necessary anymore. Also, not provided by Confluence. -->
                            org.apache.http*;version="0.0.0",
                            com.atlassian.util.profiling;resolution:=optional;version="0.0.0",

                            <!-- Necessary for CQLSearchCompat719, if used -->
                            bucket.core.persistence.hibernate;resolution:=optional;version="0.0.0",
                            com.atlassian.activeobjects.external;version="0.0.0",
                            com.atlassian.activeobjects.spi;version="0.0.0",
                            com.atlassian.applinks.api;version="0.0.0",
                            com.atlassian.applinks.api.*;version="0.0.0",
                            com.atlassian.bonnie;version="0.0.0",
                            com.atlassian.cache;version="0.0.0",
                            com.atlassian.config*;resolution:=optional;version="0.0.0",

                            <!-- We must put this instruction before confluence.*, otherwise it imports
                                 the packages as mandatory
                                 -->
                            com.atlassian.confluence.search.v2.searchfilter;resolution:=optional;version="0.0.0",
                            com.atlassian.confluence.plugin.descriptor;resolution:="optional",
                            com.atlassian.confluence.plugin.descriptor.web;resolution:="optional",
                            com.atlassian.confluence.plugin.descriptor.web.conditions;resolution:="optional",
                            com.atlassian.confluence.plugin.descriptor.web.conditions.user;resolution:="optional",

                            <!-- The real problem here is that 2 subpackages (createcontent and featurediscovery) have
                                 versions 5.0.9 and 1.9 while the parent package com.atlassian.confluence requires 5.8.6 -->
                            com.atlassian.confluence.*;version="0.0.0",
                            <!--com.atlassian.confluence.pages.persistence.dao.bulk*;version="0.0.0",-->
                            <!--com.atlassian.confluence.plugins.createcontent*;version="0.0.0",
                            com.atlassian.confluence.plugins.featurediscovery.service;version="0.0.0",-->
                            com.atlassian.core.filters*;resolution:=optional;version="0.0.0",
                            com.atlassian.core.exception;resolution:=optional;version="0.0.0",
                            com.atlassian.core.exception.*;resolution:=optional;version="0.0.0",
                            com.atlassian.core.task;version="0.0.0",
                            com.atlassian.core.task.*;version="0.0.0",
                            com.atlassian.core.user.preferences;resolution:=optional;version="0.0.0",
                            com.atlassian.core.user.preferences.*;resolution:=optional;version="0.0.0",
                            com.atlassian.core.util;resolution:=optional;version="0.0.0",
                            com.atlassian.core.util.*;resolution:=optional;version="0.0.0",
                            com.atlassian.event.api;version="0.0.0",
                            com.atlassian.extras.common.log;version="0.0.0",
                            com.atlassian.hibernate;version="0.0.0",
                            com.atlassian.plugin.module;version="0.0.0",
                            com.atlassian.plugin.web;version="0.0.0",
                            com.atlassian.plugin.web.*;version="0.0.0",
                            com.atlassian.plugin.descriptors;version="0.0.0",
                            com.atlassian.plugin;version="0.0.0",
                            com.atlassian.renderer;version="0.0.0",
                            com.atlassian.scheduler;version="0.0.0",
                            com.atlassian.scheduler.config;version="0.0.0",
                            com.atlassian.scheduler.status;version="0.0.0",
                            com.atlassian.sal.api.*;version="0.0.0",
                            com.atlassian.upm.api.*;version="0.0.0",
                            com.atlassian.user;version="0.0.0",
                            com.atlassian.util.concurrent;resolution:=optional;version="0.0.0",
                            com.atlassian.xwork;version="0.0.0",
                            com.atlassian.annotations;version="0.0.0",
                            com.atlassian.mail;version="0.0.0",
                            com.atlassian.mail.queue;version="0.0.0",
                            com.atlassian.beehive;version="0.0.0",
                            com.atlassian.soy.renderer;version="0.0.0",
                            com.atlassian.webresource.api.assembler;version="0.0.0",


                            javax.annotation;version="0.0.0",
                            javax.annotation.*;version="0.0.0",
                            javax.imageio;version="0.0.0",
                            javax.inject;resolution:=optional;version="0.0.0",
                            javax.lang.model;version="0.0.0",
                            javax.lang.model.*;version="0.0.0",
                            javax.print.attribute;resolution:=optional;version="0.0.0",
                            javax.print;resolution:=optional;version="0.0.0",
                            javax.servlet.http;version="0.0.0",
                            javax.servlet;version="0.0.0",
                            javax.ws.rs.core;version="0.0.0",
                            javax.ws.rs;version="0.0.0",
                            javax.xml.bind.annotation;version="0.0.0",
                            javax.xml.namespace;version="0.0.0",
                            javax.xml.stream.events;version="0.0.0",
                            javax.xml.stream;version="0.0.0",
                            javax.xml.transform*;resolution:=optional;version="0.0.0",
                            javax.xml.parsers;resolution:=optional;version="0.0.0",
                            net.java.ao.schema;version="0.0.0",
                            net.java.ao;version="0.0.0",
                            org.joda.time*;resolution:=optional;version="0.0.0",
                            org.slf4j*;resolution:=optional;version="0.0.0",

                            <!-- Yeah. This is for C7.19-C8.9, they don't support the same annotations -->
                            com.fasterxml.jackson.annotation;resolution:=optional;version="0.0.0",
                            org.codehaus.jackson.annotate;resolution:=optional;version="0.0.0",

                            <!--  For  atlassian-rest-v2-api-->
                            com.atlassian.plugins.rest.api.security.annotation;resolution:=optional;version="0.0.0",
                            com.atlassian.plugins.rest.api.security.exception;resolution:=optional;version="0.0.0",
                            com.atlassian.plugins.rest.api.multipart;resolution:=optional;version="0.0.0",
                            <!--  For the REST API v1 (before C9.0) -->
                            com.atlassian.plugins.rest.common.multipart;resolution:=optional;version="0.0.0",
                            <!-- End of REST APIs -->
                            <!-- For the @Component annotation scanning -->
                            org.springframework.stereotype;version="0.0.0",
                            org.springframework.lang;version="0.0.0",
                            org.springframework.beans;version="0.0.0",
                            org.springframework.beans.factory;version="0.0.0",
                            org.springframework.beans.factory.config;version="0.0.0",
                            org.springframework.beans.factory.annotation;version="0.0.0",
                            org.springframework.util;version="0.0.0",
                            com.atlassian.spring.container;version="0.0.0",
                            org.springframework.cglib.core,
                            org.springframework.cglib.proxy,
                            org.springframework.cglib.reflect,
                            org.springframework.osgi.*;resolution:="optional",
                            org.eclipse.gemini.blueprint.*;resolution:="optional",
                            <!-- For confluence 9.0 -->
                            com.atlassian.plugins.rest.common.security;resolution:=optional;version="0.0.0",
                            <!-- For @ModuleType -->
                            com.atlassian.plugin.hostcontainer;resolution:=optional;version="0.0.0",
                            <!--org.springframework.context;resolution:=optional;version="0.0.0",-->
                            com.atlassian.plugin.osgi.external;resolution:=optional;version="0.0.0",
                            com.atlassian.plugin.osgi.bridge.external;version="0.0.0",

                            <!--For the ConfluenceAppSpringConfig with @Configuration to Work (including the *)-->
                            org.jspecify.annotations;resolution:=optional;version="0.0.0",
                            sun.misc;resolution:=optional;version="0.0.0",
                            *
                        </Import-Package>
                    </instructions>
                    <banningExcludes>
                        <!-- Atlassian said we MUST ship them in C8.7 if we want them -->
                        <exclude>com.google.code.findbugs:jsr305</exclude>
                        <exclude>com.google.guava:guava</exclude>
                        <exclude>org.apache.commons:commons-lang3</exclude>
                        <exclude>commons-io:commons-io</exclude>
                    </banningExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.atlassian.plugin</groupId>
                <!-- See https://bitbucket.org/atlassian/atlassian-spring-scanner -->
                <artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-bundle-artifact</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.build.finalName}.jar</file>
                                    <type>jar</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                    <exclude>**/*.xml</exclude>
                </excludes>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>download-licenses2</id>
                                <!-- This phase is before 'package' so the license information is included in the binary
                                     distribution. -->
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>download-licenses</goal>
                                    <goal>add-third-party</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
        </profile>
    </profiles>

    <properties>
        <java.version>8</java.version>
        <allowGoogleTracking>false</allowGoogleTracking>
        <official.plugin.name>PSEA - Export Add-on</official.plugin.name>
        <official.plugin.key>play-sql-export-addon</official.plugin.key>
        <official.plugin.complete.key>com.playsql.${official.plugin.key}</official.plugin.complete.key>
        <poi.version>5.3.0</poi.version>
        <!-- Since the parent is in RY -->
        <yogi.version>${project.parent.version}</yogi.version>
    </properties>

</project>
