<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.playsql</groupId>
    <artifactId>play-sql-export-addon</artifactId>
    <version>1.5.5</version>

    <organization>
        <name>Play SQL</name>
        <url>http://www.play-sql.com/</url>
    </organization>

    <name>PSEA - Play SQL Export Add-on</name>
    <description>The add-on is a technical library that helps Requirement Yogi and Play SQL Spreadsheets export documents to Excel.</description>
    <packaging>atlassian-plugin</packaging>

    <dependencies>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.14</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.14</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>stax</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>com.atlassian.confluence</groupId>
            <artifactId>confluence</artifactId>
            <version>${confluence.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>dom4j</groupId>
                    <artifactId>dom4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.woodstox</groupId>
                    <artifactId>wstx-asl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

<!--    <repositories>
        <repository>
            <id>codehaus-mule-repo</id>
            <name>codehaus-mule-repo</name>
            <url>https://repository-master.mulesoft.org/nexus/content/groups/public/</url>
            <layout>default</layout>
        </repository>
    </repositories>-->


    <build>
        <plugins>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-amps-plugin</artifactId>
                <version>6.0.8</version>
                <extensions>true</extensions>
                <configuration>
                    <systemPropertyVariables>
                        <upm.pac.disable>true</upm.pac.disable>
                    </systemPropertyVariables>
                    <enableFastdev>false</enableFastdev>
                    <instanceId>confluence</instanceId>
                    <installPlugin>false</installPlugin>
                    <cliPort>4338</cliPort>
                    <httpPort>1991</httpPort>
                    <contextPath>/confluence</contextPath>
                    <products>
                        <product>
                            <id>confluence</id>
                            <instanceId>confluence</instanceId>
                            <version>${confluence.version}</version>
                            <dataVersion>${confluence.data.version}</dataVersion>
                            <containerId>tomcat7x</containerId>
                        </product>
                    </products>
                    <instructions>
                        <Export-Package>
                            com.playsql.psea.api<!--,
                            com.microsoft.schemas.office.x2006.digsig,
                            org.apache.poi*,
                            org.openxmlformats.schemas.*,
                            org.w3.x2000.x09.xmldsig,
                            org.w3.x2000.x09.xmldsig.impl,
                            schemaorg_apache_xmlbeans.*
-->
                        </Export-Package>
                        <Import-Package>
                            com.google.common.collect;version="0.0.0",
                            com.google.common.base;version="0.0.0",
                            com.google.common.io;version="0.0.0",
                            com.atlassian.confluence.core;version="0.0.0",
                            org.apache.log4j;version="0.0.0",
                            org.xml.sax*;version="0.0.0",
                            org.w3c.dom*;version="0.0.0",
                            com.ctc.wstx*;version="0.0.0",
                            javax.xml*;version="0.0.0"
                        </Import-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                    <exclude>**/*.xml</exclude>
                </excludes>
            </resource>
        </resources>
        <pluginManagement>
            <!-- We set the plugin versions to get a deterministic build. To list versions to upgrade, see
                 mvn versions:display-dependency-updates
                 mvn versions:display-plugin-updates
                 mvn versions:display-property-updates -->
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <extensions>
            <extension>
                <!-- This is necessary for mvn deploy:deploy to work.
                     If not, it doesn't use the user/pass from the settings.xml to upload
                     in the Maven repository. Funny thing is, deploy:deploy-file always uses it.
                     Thanks https://stackoverflow.com/questions/56201944/maven-deploydeploy-file-working-but-maven-deploy-not-working for this tip.
                 -->
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-http</artifactId>
                <version>2.10</version>
            </extension>
        </extensions>
    </build>

    <profiles>
        <profile>
            <!-- You can activate this profile manually using: mvn install -Prelease -->
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>1.8</version>
                        <configuration>
                            <!--
                                You don't need to run the license plugin manually, it is part of the build (see executions).
                                It retrieves all licenses of all dependencies into src/licenses/THIRD-PARTY-included-modules.txt

                                NB: How to retrieve licenses on a new project:
                                mvn clean license:download-licenses
                            -->
                            <projectName>Play SQL Exports</projectName>
                            <organizationName>Play SQL S.A.S.U.</organizationName>
                            <inceptionYear>2016</inceptionYear>

                            <!-- This is an open-source project under APL v2 -->
                            <licenseName>apache_v2</licenseName>
                            <skipUpdateLicense>false</skipUpdateLicense>

                            <!-- Skips the goal download-licenses -->
                            <skipDownloadLicenses>false</skipDownloadLicenses>
                            <!-- Skips the goal download-licenses -->
                            <skipUpdateLicense>false</skipUpdateLicense>
                            <!-- The license of each module -->
                            <licenseFile>${basedir}/src/license/LICENSE.txt</licenseFile>
                            <useMissingFile>true</useMissingFile>
                            <sortArtifactByName>true</sortArtifactByName>
                            <!-- The file with the list of licenses, for those which can't be found automatically -->
                            <missingFile>src/license/THIRD-PARTY.properties</missingFile>
                            <!-- Same as 'missingFile' but in XML, probably -->
                            <licensesConfigFile>src/license/licenses-manual.xml</licensesConfigFile>
                            <!-- All licenses which could automatically be fetched. About the current module only.-->
                            <licensesOutputFile>src/license/licenses-generated.xml</licensesOutputFile>
                            <!-- Dump the text of all licenses of third parties. About the current module only. -->
                            <licensesOutputDirectory>src/license/text</licensesOutputDirectory>
                            <!-- A list of dependencies for the subtree and their licenses -->
                            <thirdPartyFilename>THIRD-PARTY-included-modules.txt</thirdPartyFilename>
                            <!-- Where to put the THIRD-PARTY.txt file -->
                            <outputDirectory>${project.basedir}/src/license</outputDirectory>
                            <!-- In the binary distribution, we exclude libraries which are only compiled against, as long
                                 as they're not GPL. Atlassian Confluence is considered with a developer license. -->
                            <includedScopes>compile</includedScopes>

                        </configuration>
                        <executions>
                            <execution>
                                <id>download-licenses2</id>
                                <!-- This phase is before 'package' so the license information is included in the binary
                                     distribution. -->
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>download-licenses</goal>
                                    <goal>update-file-header</goal>
                                    <goal>update-project-license</goal>
                                    <goal>add-third-party</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <!-- To deploy, either run ./release.sh, or run: mvn clean deploy -Prelease
        
            If you have a 401:Unauthorized error when doing 'mvn deploy', check that:
             - You have set your user/password in the <servers> section of ~/.m2/settings.xml
             - You have a section <extensions> with wagon-http 2.10, to fix a bug of maven-deploy-plugin.
         -->
        <repository>
            <id>playsql.public.releases</id>
            <url>https://maven.play-sql.com/repository/public-release</url>
        </repository>
        <snapshotRepository>
            <id>playsql.public.snapshots</id>
            <url>https://maven.play-sql.com/repository/public-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <allowGoogleTracking>false</allowGoogleTracking>
        <confluence.version>6.13.7</confluence.version>
        <confluence.data.version>6.13.7</confluence.data.version>
        <amps.version>6.0.8</amps.version>
        <plugin.testrunner.version>1.2.3</plugin.testrunner.version>
        <skipTests>false</skipTests>

    </properties>

</project>
